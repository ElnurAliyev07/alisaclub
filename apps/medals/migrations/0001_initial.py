# Generated by Django 4.2.7 on 2025-08-13 09:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('membership', '__first__'),
        ('kids_content', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nailiyyət adı')),
                ('description', models.TextField(verbose_name='Təsvir')),
                ('achievement_type', models.CharField(choices=[('event_participation', 'Tədbir İştirakı'), ('material_completion', 'Material Tamamlama'), ('medal_collection', 'Medal Toplama'), ('streak', 'Ardıcıllıq'), ('special', 'Xüsusi')], max_length=30, verbose_name='Nailiyyət növü')),
                ('icon', models.CharField(default='fas fa-trophy', max_length=50, verbose_name='İkon')),
                ('color', models.CharField(default='#FFD700', max_length=7, verbose_name='Rəng')),
                ('points_reward', models.IntegerField(default=50, verbose_name='Xal mükafatı')),
                ('required_count', models.IntegerField(default=1, verbose_name='Tələb olunan say')),
                ('required_days', models.IntegerField(default=0, verbose_name='Tələb olunan gün')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Nailiyyət',
                'verbose_name_plural': 'Nailiyyətlər',
                'ordering': ['achievement_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MedalCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kateqoriya adı')),
                ('description', models.TextField(blank=True, verbose_name='Təsvir')),
                ('color', models.CharField(default='#FFD700', max_length=7, verbose_name='Rəng')),
                ('icon', models.CharField(default='fas fa-medal', max_length=50, verbose_name='İkon')),
                ('order', models.IntegerField(default=0, verbose_name='Sıralama')),
            ],
            options={
                'verbose_name': 'Medal Kateqoriyası',
                'verbose_name_plural': 'Medal Kateqoriyaları',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='VirtualPassport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_number', models.CharField(max_length=20, unique=True, verbose_name='Pasport nömrəsi')),
                ('issue_date', models.DateTimeField(auto_now_add=True, verbose_name='Verilmə tarixi')),
                ('total_points', models.IntegerField(default=0, verbose_name='Ümumi xal')),
                ('level', models.IntegerField(default=1, verbose_name='Səviyyə')),
                ('experience_points', models.IntegerField(default=0, verbose_name='Təcrübə xalı')),
                ('child', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='passport', to='membership.child', verbose_name='Uşaq')),
            ],
            options={
                'verbose_name': 'Virtual Pasport',
                'verbose_name_plural': 'Virtual Pasportlar',
                'ordering': ['-total_points'],
            },
        ),
        migrations.CreateModel(
            name='PointHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(verbose_name='Xal')),
                ('source', models.CharField(max_length=200, verbose_name='Mənbə')),
                ('balance_after', models.IntegerField(verbose_name='Sonrakı balans')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('passport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_history', to='medals.virtualpassport', verbose_name='Pasport')),
            ],
            options={
                'verbose_name': 'Xal Tarixçəsi',
                'verbose_name_plural': 'Xal Tarixçələri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Medal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Medal adı')),
                ('description', models.TextField(verbose_name='Təsvir')),
                ('medal_type', models.CharField(choices=[('bronze', 'Bürünc'), ('silver', 'Gümüş'), ('gold', 'Qızıl'), ('platinum', 'Platin'), ('special', 'Xüsusi')], max_length=20, verbose_name='Medal növü')),
                ('rarity', models.CharField(choices=[('common', 'Adi'), ('uncommon', 'Nadir'), ('rare', 'Çox Nadir'), ('epic', 'Epik'), ('legendary', 'Əfsanəvi')], default='common', max_length=20, verbose_name='Nadirlik')),
                ('icon', models.CharField(default='fas fa-medal', max_length=50, verbose_name='İkon')),
                ('image', models.ImageField(blank=True, upload_to='medals/', verbose_name='Şəkil')),
                ('points', models.IntegerField(default=10, verbose_name='Xal')),
                ('required_events', models.IntegerField(default=0, verbose_name='Tələb olunan tədbir sayı')),
                ('required_materials', models.IntegerField(default=0, verbose_name='Tələb olunan material sayı')),
                ('required_points', models.IntegerField(default=0, verbose_name='Tələb olunan xal')),
                ('discount_percentage', models.IntegerField(default=0, verbose_name='Endirim faizi')),
                ('special_privileges', models.TextField(blank=True, verbose_name='Xüsusi imtiyazlar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medals', to='medals.medalcategory', verbose_name='Kateqoriya')),
                ('required_medals', models.ManyToManyField(blank=True, to='medals.medal', verbose_name='Tələb olunan medallər')),
            ],
            options={
                'verbose_name': 'Medal',
                'verbose_name_plural': 'Medallər',
                'ordering': ['category', 'medal_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserMedal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_date', models.DateTimeField(auto_now_add=True, verbose_name='Qazanma tarixi')),
                ('notes', models.TextField(blank=True, verbose_name='Qeydlər')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medals', to='membership.child', verbose_name='Uşaq')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.event', verbose_name='Tədbir')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='kids_content.kidsmaterial', verbose_name='Material')),
                ('medal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awarded_to', to='medals.medal', verbose_name='Medal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_medals', to=settings.AUTH_USER_MODEL, verbose_name='İstifadəçi')),
            ],
            options={
                'verbose_name': 'İstifadəçi Medalı',
                'verbose_name_plural': 'İstifadəçi Medalları',
                'ordering': ['-earned_date'],
                'unique_together': {('child', 'medal')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_date', models.DateTimeField(auto_now_add=True, verbose_name='Qazanma tarixi')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_by', to='medals.achievement', verbose_name='Nailiyyət')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='membership.child', verbose_name='Uşaq')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL, verbose_name='İstifadəçi')),
            ],
            options={
                'verbose_name': 'İstifadəçi Nailiyyəti',
                'verbose_name_plural': 'İstifadəçi Nailiyyətləri',
                'ordering': ['-earned_date'],
                'unique_together': {('child', 'achievement')},
            },
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('weekly', 'Həftəlik'), ('monthly', 'Aylıq'), ('yearly', 'İllik'), ('all_time', 'Bütün vaxtlar')], max_length=20, verbose_name='Dövr')),
                ('points', models.IntegerField(verbose_name='Xal')),
                ('rank', models.IntegerField(verbose_name='Rəqəm')),
                ('period_start', models.DateField(verbose_name='Dövr başlanğıcı')),
                ('period_end', models.DateField(verbose_name='Dövr sonu')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.child', verbose_name='Uşaq')),
            ],
            options={
                'verbose_name': 'Liderlik Cədvəli',
                'verbose_name_plural': 'Liderlik Cədvəlləri',
                'ordering': ['period', 'rank'],
                'unique_together': {('child', 'period', 'period_start')},
            },
        ),
    ]
